The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Trying simple matrix division:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Trying empty matrix:

    >>> matrix_divided([], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Trying dividing by 0:

    >>> matrix_divided([[1, 2], [2, 4]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Trying matrix with different row size:

    >>> matrix_divided([[1, 2, 4], [2, 4]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Trying div being a different type than int/float:

    >>> matrix_divided([[1, 2], [3, 4]], 'a')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Trying div being infinite:

    >>> matrix_divided([[1, 2], [3, 4]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

Trying missing one argument:

    >>> matrix_divided(3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Trying missing both arguments:

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
